group { name: "e/comp/preview";
   parts {
      part { name: "e.swallow.preview"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
         }
      }
      part { name: "e.text.label"; type: TEXT; mouse_events: 0;
         scale: 1;
         effect: SHADOW BOTTOM;
         description { state: "default" 0.0;
            color: 255 255 255 255;
            color3: 0 0 0 128;
            text { font: "Sans:style=Bold"; size: 10;
               text_class: "fileman_icon";
               align: 0.5 0.5;
               min: 1 1;
            }
            fixed: 0 1;
         }
      }
   }
}

group { name: "e/comp/screen/base/default";
   alias: "e/comp/screen/base/noeffects";
   parts {
      part { name: "clip"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
         }
      }
      part { name: "e.swallow.background"; type: SWALLOW; mouse_events: 0;
         clip_to: "clip";
         description { state: "default" 0.0;
         }
      }
   }
}

group { name: "e/comp/screen/overlay/default";
   images.image: "screen_circular_shadow.png" COMP;
   parts {
      part { name: "clip"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
         }
      }
      part { name: "shadow"; mouse_events: 0;
         clip_to: "clip";
         description { state: "default" 0.0;
            rel1.relative: -1.0 -1.0;
            rel2.relative: 2.0 2.0;
            image.normal: "screen_circular_shadow.png";
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "blanker"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 255;
            visible: 1;
         }
      }
      part { name: "suspender"; type: RECT; mouse_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 255;
            visible: 1;
         }
      }
   }
   programs {
         program {
            name: "screensaver_on";
            signal: "e,state,screensaver,on"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 3.0 CURRENT;
            target: "blanker";
         }
         program {
            name: "screensaver_on2";
            signal: "e,state,screensaver,on"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: DECELERATE 1.5 CURRENT;
            target: "shadow";
         }
         program {
            name: "screensaver_off";
            signal: "e,state,screensaver,off"; source: "e";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "blanker";
         }
         program {
            name: "screensaver_off2";
            signal: "e,state,screensaver,off"; source: "e";
            action: STATE_SET "default" 0.0;
            transition: ACCELERATE 0.25 CURRENT;
            target: "shadow";
         }
         program {
            name: "suspend";
            signal: "e,state,sys,suspend"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "suspender";
            after: "suspend_done";
         }
         program { name: "suspend_done";
            action: SIGNAL_EMIT "e,state,sys,suspend,done" "e";
         }
         program {
            name: "hibernate";
            signal: "e,state,sys,hibernate"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "suspender";
            after: "hibernate_done";
         }
         program { name: "hibernate_done";
            action: SIGNAL_EMIT "e,state,sys,hibernate,done" "e";
         }
         program {
            name: "resume";
            signal: "e,state,sys,resume"; source: "e";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 1.0 CURRENT;
            target: "suspender";
         }
         program {
            name: "reboot";
            signal: "e,state,sys,reboot"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "suspender";
            after: "reboot_done";
         }
         program { name: "reboot_done";
            action: SIGNAL_EMIT "e,state,sys,reboot,done" "e";
         }
         program {
            name: "halt";
            signal: "e,state,sys,halt"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "suspender";
            after: "halt_done";
         }
         program { name: "halt_done";
            action: SIGNAL_EMIT "e,state,sys,halt,done" "e";
         }
         program {
            name: "logout";
            signal: "e,state,sys,logout"; source: "e";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0.5 CURRENT;
            target: "suspender";
            after: "logout_done";
         }
         program { name: "logout_done";
            action: SIGNAL_EMIT "e,state,sys,logout,done" "e";
         }
   }
}


group { name: "e/comp/screen/overlay/noeffects";
   inherit: "e/comp/screen/overlay/default";
   programs {
         program {
            name: "screensaver_on";
            transition: ACCELERATE 0 CURRENT;
         }
         program {
            name: "screensaver_on2";
            transition: DECELERATE 0 CURRENT;
         }
         program {
            name: "screensaver_off";
            transition: ACCELERATE 0 CURRENT;
         }
         program {
            name: "screensaver_off2";
            transition: ACCELERATE 0 CURRENT;
         }
         program {
            name: "suspend";
            signal: "e,state,sys,suspend"; source: "e";
            action: SIGNAL_EMIT "e,state,sys,suspend,done" "e";
            after: "action_done";
         }
         program {
            name: "action_done";
            action: STATE_SET "visible" 0.0;
            transition: ACCELERATE 0 CURRENT;
            target: "suspender";
         }
         program {
            name: "hibernate";
            signal: "e,state,sys,hibernate"; source: "e";
            action: SIGNAL_EMIT "e,state,sys,hibernate,done" "e";
            after: "action_done";
         }
         program {
            name: "resume";
            transition: DECELERATE 1 CURRENT;
         }
         program {
            name: "reboot";
            signal: "e,state,sys,reboot"; source: "e";
            action: SIGNAL_EMIT "e,state,sys,reboot,done" "e";
            after: "action_done";
         }
         program {
            name: "halt";
            signal: "e,state,sys,halt"; source: "e";
            action: SIGNAL_EMIT "e,state,sys,halt,done" "e";
            after: "action_done";
         }
         program {
            name: "logout";
            signal: "e,state,sys,logout"; source: "e";
            action: SIGNAL_EMIT "e,state,sys,logout,done" "e";
            after: "action_done";
         }
   }
}

group { name: "e/comp/effects/none";
   parts {
      part { name: "e.swallow.content"; type: SWALLOW;
        description { state: "default" 0.0;
        }
      }
   }
}

/* non-auto effects are assumed to be run frame by frame by an animator */
group { name: "e/comp/effects/move";
   script {
      public message(Msg_Type:type, id, ...) {
         if ((type == MSG_INT_SET) && (id == 0)) {
            /* set state */
            new st;

            st = getarg(2);
            if (st == 1)
              set_state(PART:"mover", "custom", 0.0);
            else
              set_state(PART:"mover", "default", 0.0);
         } else if ((type == MSG_INT_SET) && (id == 1)) {
            /* x,y coords to move to */
            new x, y;

            x = getarg(2);
            y = getarg(3);

            custom_state(PART:"mover", "default", 0.0);
            set_state_val(PART:"mover", STATE_REL1_OFFSET, x, y);
            set_state_val(PART:"mover", STATE_REL2_OFFSET, x, y);
         }
      }
   }
   parts {
      part { name: "mover"; type: SPACER;
        description { state: "default" 0.0;
        }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
        description { state: "default" 0.0;
           rel1.to: "mover";
           rel2.to: "mover";
        }
      }
   }
   programs {
      program {
         name: "show";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "default";
         action: STATE_SET "custom" 0.0;
         transition: DECELERATE 0.4 CURRENT;
         target: "mover";
         after: "done";
      }
      program {
         name: "hide";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "custom";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.4 CURRENT;
         target: "mover";
         after: "done";
      }
      program {
         name: "stop";
         signal: "e,action,stop";
         source: "e";
         action: ACTION_STOP;
         target: "show";
         target: "hide";
      }
      program {
         name: "done";
         action: SIGNAL_EMIT "e,action,done" "e";
      }
   }
}

/* auto effects are "start and forget" */
group { name: "e/comp/effects/auto/pane";
   //data.item: "noclip" "1"; //setting this prevents object from being clipped to its zone during effect
   script {
      public message(Msg_Type:type, id, ...) {
         if ((type == MSG_INT_SET) && (id == 0)) {
            /* set state */
            new st;

            st = getarg(2);
            if (st == 1)
              set_state(PART:"mover", "custom", 0.0);
            else
              set_state(PART:"mover", "default", 0.0);
         } else if ((type == MSG_INT_SET) && (id == 1)) {
            /* border geom[4] / screen size[2] / desk change direction[2] */
            new x, y, sw, sh, dx, dy;

            sw = getarg(6);
            sh = getarg(7);
            dx = getarg(8);
            dy = getarg(9);

            x = round(sw*dx*1.5);
            y = round(sh*dy*1.5);

            custom_state(PART:"mover", "default", 0.0);
            set_state_val(PART:"mover", STATE_REL1_OFFSET, x, y);
            set_state_val(PART:"mover", STATE_REL2_OFFSET, x, y);
         }
      }
   }
   parts {
      part { name: "mover"; type: SPACER;
        description { state: "default" 0.0;
        }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
        description { state: "default" 0.0;
           rel1.to: "mover";
           rel2.to: "mover";
        }
      }
   }
   programs {
      program {
         name: "show";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "default";
         action: STATE_SET "custom" 0.0;
         transition: DECELERATE 0.4 CURRENT;
         target: "mover";
         after: "done";
      }
      program {
         name: "hide";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "custom";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.4 CURRENT;
         target: "mover";
         after: "done";
      }
      program {
         name: "stop";
         signal: "e,action,stop";
         source: "e";
         action: ACTION_STOP;
         target: "show";
         target: "hide";
      }
      program {
         name: "done";
         action: SIGNAL_EMIT "e,action,done" "e";
      }
   }
}

group { name: "e/comp/effects/auto/diagonal";
   inherit: "e/comp/effects/auto/pane";
   script {
      public message(Msg_Type:type, id, ...) {
         if ((type == MSG_INT_SET) && (id == 0)) {
            /* set state */
            new st;

            st = getarg(2);

            if (st == 1)
              set_state(PART:"mover", "custom", 0.0);
            else
              set_state(PART:"mover", "default", 0.0);
         } else if ((type == MSG_INT_SET) && (id == 1)) {
            /* border geom / screen size / desk change direction */
            new x, y, w, h, sw, sh, mx, my, bx, by;
            new Float:fx, Float:fy, Float:ang, Float:len, Float:lmax, Float:rad;

            x = getarg(2);
            y = getarg(3);
            w = getarg(4);
            h = getarg(5);
            sw = getarg(6);
            sh = getarg(7);
            custom_state(PART:"mover", "default", 0.0);

            mx = sw/2;
            my = sh/2;

            bx = x+(w/2)-mx;
            by = y+(h/2)-my;
            if (bx == 0) bx = 1;
            if (by == 0) by = 1;
            fx = bx/(w/2);
            fy = by/(h/2);
            ang = atan(fy/fx);
            if (fx < 0.0)
              ang = PI+ang;
            len = sqrt((bx*bx)+(by*by));
            lmax = sqrt(((sw/2)*(sw/2))+((sh/2)*(sh/2)));
            rad = sqrt((w*w)+(h*h))/2.0;
            x = round(cos(ang)*(lmax-len+rad));
            y = round(sin(ang)*(lmax-len+rad));
            set_state_val(PART:"mover", STATE_REL1_OFFSET, x, y);
            set_state_val(PART:"mover", STATE_REL2_OFFSET, x, y);
         }
      }
   }
}

group { name: "e/comp/effects/auto/zoom";
   inherit: "e/comp/effects/auto/diagonal";
   script {
      public message(Msg_Type:type, id, ...) {
         if ((type == MSG_INT_SET) && (id == 0)) {
            /* set state */
            new st;

            st = getarg(2);
            if (st == 1) {
              /* starting from offscreen */
              set_state_val(PART:"mover", STATE_REL1, 0.3, 0.3);
              set_state_val(PART:"mover", STATE_REL2, 0.7, 0.7);
              set_state(PART:"mover", "custom", 0.0);
              set_state(PART:"clip", "hidden", 0.0);
            } else {
              /* starting from normal position */
              set_state_val(PART:"mover", STATE_REL1, -1.7, -1.7);
              set_state_val(PART:"mover", STATE_REL2, 1.7, 1.7);
              set_state(PART:"mover", "default", 0.0);
              set_state(PART:"clip", "default", 0.0);
            }
         } else if ((type == MSG_INT_SET) && (id == 1)) {
            /* border geom / screen size / desk change direction */
            new x, y, w, h, sw, sh, mx, my, bx, by;
            new Float:fx, Float:fy, Float:ang, Float:len, Float:lmax, Float:rad;

            x = getarg(2);
            y = getarg(3);
            w = getarg(4);
            h = getarg(5);
            sw = getarg(6);
            sh = getarg(7);
            custom_state(PART:"mover", "default", 0.0);

            mx = sw/2;
            my = sh/2;

            bx = x+(w/2)-mx;
            by = y+(h/2)-my;
            if (bx == 0) bx = 1;
            if (by == 0) by = 1;
            fx = bx/(w/2);
            fy = by/(h/2);
            ang = atan(fy/fx);
            if (fx < 0.0)
              ang = PI+ang;
            len = sqrt((bx*bx)+(by*by));
            lmax = sqrt(((sw/2)*(sw/2))+((sh/2)*(sh/2)));
            rad = sqrt((w*w)+(h*h))/2.0;
            x = round(cos(ang)*(lmax-len+rad));
            y = round(sin(ang)*(lmax-len+rad));
            set_state_val(PART:"mover", STATE_REL1_OFFSET, x, y);
            set_state_val(PART:"mover", STATE_REL2_OFFSET, x, y);
         }
      }
   }
   parts {
      part { name: "clip"; type: RECT; insert_after: "mover";
         description { state: "default";
            rel1.to: "mover";
            rel2.to: "mover";
            color: 255 255 255 255;
         }
         description { state: "hidden";
            rel1.to: "mover";
            rel2.to: "mover";
            color: 255 255 255 0;
         }
      }
      part { name: "e.swallow.content"; clip_to: "clip";
      }
   }
   programs {
      program {
         name: "show2";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "default";
         action: STATE_SET "hidden" 0.0;
         transition: ACCELERATE 0.4 CURRENT;
         target: "clip";
      }
      program {
         name: "hide2";
         signal: "e,action,go";
         source: "e";
         filter: "mover" "custom";
         action: STATE_SET "default" 0.0;
         transition: ACCELERATE 0.4 CURRENT;
         target: "clip";
      }
   }
}

group { name: "e/comp/border/default";
   images.image: "win_shadow.png" COMP;
   images.image: "win_glow.png" COMP;
   parts {
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -1.0  -1.0;
            rel1.offset: -9999 -9999;
            rel2.relative: 2.0   2.0;
            rel2.offset: 9999  9999;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "shadow";
         clip_to: "clipper";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.to: "e.swallow.content";
            rel1.offset: -7  -3;
            rel2.to: "e.swallow.content";
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "glow";
         clip_to: "clipper";
         description { state: "default" 0.0;
            image.normal: "win_glow.png";
            image.border: 9 9 9 9;
            image.middle: 0;
            rel1.to: "e.swallow.content";
            rel1.offset: -5  -5;
            rel2.to: "e.swallow.content";
            rel2.offset: 4 4;
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "shower"; type: SPACER;
         description { state: "default" 0.0;
            rel1.relative: 0.05 0.05;
            rel2.relative: 0.95 0.95;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0  0.0;
            rel2.relative: 1.0  1.0;
         }
      }
      part { name: "trans-clipper";
         type: RECT;
         clip_to: "clipper";
         mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "comp_alpha";
            rel1.to: "clipper";
            rel2.to: "clipper";
         }
      }
      part { name: "focus-clipper";
         type: RECT;
         clip_to: "trans-clipper";
         mouse_events: 0;
         description { state: "default" 0.0;
            color_class: "comp_focus-out_color";
            rel1.to: "clipper";
            rel2.to: "clipper";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color_class: "";
            color: 255 255 255 255;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         clip_to: "focus-clipper";
         description { state: "default" 0.0;
            rel1.to: "shower";
            rel2.to: "shower";
         }
      }
   }
   programs {
      program {
         signal: "e,state,shadow,on"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "shadow";
      }
      program {
         signal: "e,state,shadow,off"; source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "shadow";
      }
      program {
         name: "visible_on";
         signal: "e,state,visible,on"; source: "e";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.15;
         target: "clipper";
         target: "shower";
         after: "show2";
      }
      program { name: "show2";
         action: SIGNAL_EMIT "e,action,show,done" "e";
      }
      program {
         name: "visible_off";
         signal: "e,state,visible,off"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.30;
         target: "clipper";
         target: "shower";
         after: "hide2";
      }
      program { name: "hide2";
         action: SIGNAL_EMIT "e,action,hide,done" "e";
      }
      program {
         name: "focus_on";
         signal: "e,state,focus,on"; source: "e";
         action: STATE_SET "focused" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "glow";
         target: "focus-clipper";
         after: "focus2";
      }
      program { name: "focus2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.4;
         target: "glow";
      }
      program {
         name: "focus_off";
         signal: "e,state,focus,off"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.1;
         target: "focus-clipper";
         after: "focus_off2";
      }
      program {
         name: "focus_off2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.4;
         target: "glow";
      }
      program { name: "urgent1";
         signal: "e,state,urgent,on"; source: "e";
         action: STATE_SET "focused" 0.0;
         transition: SINUSOIDAL 0.3;
         target: "glow";
         after: "urgent2";
      }
      program { name: "urgent2";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.3;
         target: "glow";
         after: "urgent1";
      }
      program {
         signal: "e,state,urgent,off"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: SINUSOIDAL 0.6 CURRENT;
         target: "glow";
      }
   }
}

group { name: "e/comp/border/rotate";
   inherit: "e/comp/border/default";
   parts {
      part { name: "e.swallow.content";
         description { state: "default";
            map {
               on: 1;
               rotation {
                  z: 0;
               }
            }
         }
         description { state: "focus-out";
            inherit: "default";
            map.rotation.z: 180;
         }
      }
      part {
         name: "shower";
         description { state: "default";
            rel1.relative: 0.0  0.0;
            rel2.relative: 1.0  1.0;
         }
      }
   }
   programs {
      program { name: "focus3";
         signal: "e,state,focus,on"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "e.swallow.content";
         transition: LINEAR 0.3;
      }
      program { name: "focus_off3";
         signal: "e,state,focus,off"; source: "e";
         action: STATE_SET "focus-out" 0.0;
         target: "e.swallow.content";
         transition: LINEAR 0.3;
      }
   }
}

group { name: "e/comp/border/rotate/fast";
   inherit: "e/comp/border/rotate";
   programs {
      program { name: "focus3";
         transition: LINEAR 0;
      }
      program { name: "focus_off3";
         transition: LINEAR 0;
      }
   }
}

group { name: "e/comp/border/flip";
   inherit: "e/comp/border/rotate";
   parts {
      part { name: "e.swallow.content";
         description { state: "default";
            map {
               on: 1;
               rotation {
                  z: 0;
                  y: 0;
               }
               backface_cull: 1;
            }
         }
         description { state: "focus-out";
            inherit: "default";
            map.rotation {
               z: 0;
               y: 180;
            }
         }
      }
   }
}

group { name: "e/comp/border/flip/fast";
   inherit: "e/comp/border/flip";
   programs {
      program { name: "focus3";
         transition: LINEAR 0;
      }
      program { name: "focus_off3";
         transition: LINEAR 0;
      }
   }
}

group { name: "e/comp/border/popup";
   inherit: "e/comp/border/default";
   parts {
      part { name: "focus-clipper";
         description { state: "default";
            color_class: "";
         }
      }
   }
}

group { name: "e/comp/border/default/fast";
   inherit: "e/comp/border/default";
   programs {
      program {
         name: "visible_on";
         transition: DECELERATE 0;
      }
      program {
         name: "visible_off";
         transition: DECELERATE 0;
      }
      program {
         name: "focus_on";
         transition: SINUSOIDAL 0.1;
         target: "glow";
         after: "focus2";
      }
      program {
         name: "focus_on2";
         signal: "e,state,focus,on"; source: "e";
         action: STATE_SET "focused" 0.0;
         target: "focus-clipper";
      }
      program {
         name: "focus_off";
         transition: SINUSOIDAL 0;
      }
   }
}

group { name: "e/comp/border/popup/fast";
   inherit: "e/comp/border/default/fast";
   parts {
      part { name: "focus-clipper";
         description { state: "default";
            color_class: "";
         }
      }
   }
}

group { name: "e/comp/border/none";
   parts {
      part { name: "e.swallow.content"; type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
   }
   programs {
      program {
         signal: "e,state,visible,on"; source: "e";
         action: SIGNAL_EMIT "e,action,show,done" "e";
      }
      program {
         signal: "e,state,visible,off"; source: "e";
         action: SIGNAL_EMIT "e,action,hide,done" "e";
      }
   }
}

group { name: "e/comp/border/still";
   inherit: "e/comp/border/default";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/comp/border/still/fast";
   inherit: "e/comp/border/default/fast";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
   }
}

group { name: "e/comp/border/menu";
   inherit: "e/comp/border/popup";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: 0.05 0.0;
            rel2.relative: 0.95 0.9;
         }
      }
   }
}

group { name: "e/comp/border/menu/fast";
   inherit: "e/comp/border/popup/fast";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: 0.05 0.0;
            rel2.relative: 0.95 0.9;
         }
      }
   }
}

group { name: "e/comp/border/everything";
   inherit: "e/comp/border/popup";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: -0.3 -0.3;
            rel2.relative: 1.3 1.3;
         }
      }
   }
}

group { name: "e/comp/border/everything/fast";
   inherit: "e/comp/border/popup/fast";
   parts {
      part { name: "shower";
         description { state: "default" 0.0;
            rel1.relative: -0.3 -0.3;
            rel2.relative: 1.3 1.3;
         }
      }
   }
}

group { name: "e/comp/border/fullscreen";
   images.image: "win_shadow.png" COMP;
   images.image: "screen_circular_shadow.png" COMP;
   data.item: "screen.bg" "fullscreen.bg";
   parts {
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -1.0  -1.0;
            rel1.offset: -9999 -9999;
            rel2.relative: 2.0   2.0;
            rel2.offset: 9999  9999;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
         description { state: "visible2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "clipper_sh"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: -1.0  -1.0;
            rel1.offset: -9999 -9999;
            rel2.relative: 2.0   2.0;
            rel2.offset: 9999  9999;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 100;
            visible: 1;
         }
         description { state: "visible2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
      }
      part { name: "clipper_all"; type: RECT;
         description { state: "default" 0.0;
         }
      }
      part { name: "scr_shadow";
         clip_to: "clipper_all";
         description { state: "default" 0.0;
            rel1.relative: -1.0 -1.0;
            rel2.relative: 2.0 2.0;
            image.normal: "screen_circular_shadow.png";
            fill.smooth: 0;
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
            color: 255 255 255 255;
            visible: 1;
         }
      }
      part { name: "scr_shade"; type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 255;
            visible: 1;
         }
      }
      part { name: "shadow";
         clip_to: "clipper_sh";
         description { state: "default" 0.0;
            image.normal: "win_shadow.png";
            image.border: 14 14 14 14;
            image.middle: 0;
            rel1.to: "e.swallow.content";
            rel1.offset: -7  -3;
            rel2.to: "e.swallow.content";
            rel2.offset: 6 11;
            fill.smooth: 0;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "shower"; type: RECT;
         description { state: "default" 0.0;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            visible: 0;
         }
         description { state: "visible1" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.1 0.49;
            rel1.offset: 0 0;
            rel2.relative: 0.9 0.51;
            rel2.offset: -1 -1;
         }
         description { state: "visible2" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0  0.0;
            rel2.relative: 1.0  1.0;
         }
      }
      part { name: "e.swallow.content"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "shower";
            rel2.to: "shower";
         }
      }
      part { name: "fader"; type: RECT;
         description { state: "default" 0.0;
            rel1.to: "e.swallow.content";
            rel2.to: "e.swallow.content";
            color: 255 255 255 0;
            visible: 0;
         }
         description { state: "visible1" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            visible: 1;
         }
         description { state: "visible2" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 0;
            visible: 0;
         }
      }
   }
   programs {
      program {
         signal: "e,state,shadow,on"; source: "e";
         action: STATE_SET "default" 0.0;
         target: "shadow";
      }
      program {
         signal: "e,state,shadow,off"; source: "e";
         action: STATE_SET "hidden" 0.0;
         target: "shadow";
      }
      program {
         name: "visible_on";
         signal: "e,state,visible,on"; source: "e";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.25;
         target: "scr_shadow";
         target: "scr_shade";
      }
      program {
         name: "visible_on2";
         signal: "e,state,visible,on"; source: "e";
         action: STATE_SET "visible1" 0.0;
         transition: DECELERATE 0.05;
         target: "clipper";
         target: "clipper_sh";
         target: "shower";
         target: "fader";
         after: "show2";
      }
      program { name: "show2";
         action: STATE_SET "visible2" 0.0;
         transition: DECELERATE 0.20;
         target: "clipper";
         target: "clipper_sh";
         target: "shower";
         target: "fader";
         after: "show3";
      }
      program { name: "show3";
         action: SIGNAL_EMIT "e,action,show,done" "e";
      }
      program {
         name: "visible_off";
         signal: "e,state,visible,off"; source: "e";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.25;
         target: "scr_shadow";
         target: "scr_shade";
      }
      program {
         name: "visible_off2";
         signal: "e,state,visible,off"; source: "e";
         action: STATE_SET "visible1" 0.0;
         transition: DECELERATE 0.2;
         target: "clipper";
         target: "clipper_sh";
         target: "shower";
         target: "fader";
         after: "hide2";
      }
      program { name: "hide2";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.05;
         target: "clipper";
         target: "clipper_sh";
         target: "shower";
         target: "fader";
         after: "hide3";
      }
      program { name: "hide3";
         action: SIGNAL_EMIT "e,action,hide,done" "e";
      }
   }
}

group { name: "e/comp/border/fullscreen/fast";
   inherit: "e/comp/border/fullscreen";
   programs {
      program {
         name: "visible_on";
         transition: DECELERATE 0;
      }
      program {
         name: "visible_on2";
         transition: DECELERATE 0;
      }
      program { name: "show2";
         transition: DECELERATE 0;
      }
      program {
         name: "visible_off";
         transition: DECELERATE 0;
      }
      program {
         name: "visible_off2";
         transition: DECELERATE 0;
      }
      program { name: "hide2";
         transition: DECELERATE 0;
      }
   }
}
